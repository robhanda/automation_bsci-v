import sys,ConfigParser,telnetlib,paramiko,getpass,time
def genaTogling(genaState,totalNumOfBcf,numberOfBtsPerBCF,bscIp):

	global telnetBsc,btsLock,btsGenaDisable,btsUnlock,btsGenaState,username,password
	print genaState
	for bcf in range(1,totalNumOfBcf):
                for bts in range (1,numberOfBtsPerBCF):
			print bscIp
			telnetBsc = telnetlib.Telnet(bscIp)
			time.sleep(10)
			telnetBsc.read_until(b'ENTER PASSWORD <',15)
			username="SYSTEM"
			telnetBsc.write(username+"\r\n")
			telnetBsc.read_until(b'ENTER PASSWORD <',15)
			password="SYSTEM"
			telnetBsc.write(password+"\r\n")
                        btsGenaState=("ZEQO:BTS=%d%d:GPRS;"%(bcf,bts))
                        telnetBsc.write(btsGenaState+'\r\n')
                        telnetBsc.read_until(b'expectedBscLine',15)
                        btsLock=("ZEQS:BTS=%d%d:%s;"%(bcf,bts,genaState))
                        telnetBsc.write(btsLock+'\r\n')
                        time.sleep(10)
                        telnetBsc.read_until(b'expectedBscLine',15)
                        btsGenaDisable=("ZEQV:BTS=%d%d:GENA=%s;"%(bcf,bts,genaState))
                        telnetBsc.write(btsGenaDisable+'\r\n')
                        time.sleep(15)
                        telnetBsc.read_until(b'expectedBscLine',15)
                        btsUnlock=("ZEQS:BTS=%d%d:%s;"%(bcf,bts,genaState))
                        telnetBsc.write(btsUnlock+'\r\n')
                        time.sleep(10)
                        telnetBsc.read_until(b'expectedBscLine',15)

    
def bufferReading():
    pass
def elgStateChange():
    pass
if __name__=="__main__":
	memoryLeakState=sys.argv
	gemuConfigfile = ConfigParser.ConfigParser()
	gemuConfigfile.read('testConfiguration.ini')
	bsc_type=gemuConfigfile.get("Test_Environment_BSC","bsc_type")
	totalNumOfBcf=int(gemuConfigfile.get("Test_Environment_BSC","number_of_bcf_in_bsc"))
	numberOfBtsPerBCF=int(gemuConfigfile.get("Test_Environment_GEMU","number_of_bts_per_bcf"))
	bscIp=gemuConfigfile.get("Test_Environment_BSC","bsc_omu_ip")
	print totalNumOfBcf,numberOfBtsPerBCF
	print bsc_type
   	bscType=""
	print memoryLeakState
    	if memoryLeakState[1] =="PRE":
		print("inside pre")
		genaTogling('N',totalNumOfBcf,numberOfBtsPerBCF,bscIp)		        	
    	if memoryLeakState[1]=="POST":
        	pass

